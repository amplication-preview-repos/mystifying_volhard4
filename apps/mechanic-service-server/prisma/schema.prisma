datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Mechanic {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Admin {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Order {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Category {
  category  String?
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  updatedAt DateTime  @updatedAt
  vehicles  Vehicle[]
}

model Montir {
  createdAt      DateTime        @default(now())
  customerOrders CustomerOrder[]
  id             String          @id @default(cuid())
  montirName     String?
  montirPassword String?
  montirPhone    String?
  section        String?
  updatedAt      DateTime        @updatedAt
}

model Service {
  createdAt      DateTime        @default(now())
  customerOrders CustomerOrder[]
  id             String          @id @default(cuid())
  service        String?
  updatedAt      DateTime        @updatedAt
}

model Status {
  createdAt      DateTime          @default(now())
  customerOrders CustomerOrder[]
  id             String            @id @default(cuid())
  status         EnumStatusStatus?
  updatedAt      DateTime          @updatedAt
}

model Vehicle {
  category       Category?       @relation(fields: [categoryId], references: [id])
  categoryId     String?
  createdAt      DateTime        @default(now())
  customerOrders CustomerOrder[]
  id             String          @id @default(cuid())
  name           String?
  transmission   String?
  updatedAt      DateTime        @updatedAt
}

model User {
  createdAt      DateTime        @default(now())
  customerOrders CustomerOrder[]
  email          String?         @unique
  firstName      String?
  id             String          @id @default(cuid())
  lastName       String?
  password       String
  roles          Json
  updatedAt      DateTime        @updatedAt
  username       String          @unique
  userName       String?
  userPhone      String?
}

model CustomerOrder {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  location  String?
  montir    Montir?  @relation(fields: [montirId], references: [id])
  montirId  String?
  problem   String?
  service   Service? @relation(fields: [serviceId], references: [id])
  serviceId String?
  status    Status?  @relation(fields: [statusId], references: [id])
  statusId  String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
  vehicleId String?
}

enum EnumStatusStatus {
  Option1
}
